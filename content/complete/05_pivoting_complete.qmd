---
title: "Reshaping (Pivoting) Data"
format: html
editor_options: 
  chunk_output_type: console
---

In this lesson, we will be working with a new NHANES table that contains urine albumin and creatinine *lab* data. 

```{r}
# load the tidyverse and the urine_albumin_creatinine NHANES data
library(tidyverse)
labs_data <- read.csv("data/urine_albumin_creatinine.csv")
```

```{r}
# take a look at the first 10 rows
head(labs_data, 10)
```

This data is in a **long format**--there are multiple rows for each observational unit, each corresponding to a different variable being measured (in this case, the different labs).


A **wide format**, on the other hand, will only have *one* row for each observational unit (respondent), and each of the individual variables being measured (the labs) will have their own column, each containing the *values* for the corresponding lab.

You can convert from a long format to a wide format using the `pivor_wider()` function. 

The code below creates a wide-form version of the labs data, and saves it as a new data frame called `labs_data_wide`:

```{r}
# use pivot_wider() to convert the labs data from a 
# long format to a wide format. 
# arguments are `names_from` and `values_from`
# save the wide data as `labs_data_wide`.
labs_data_wide <- labs_data |> 
  pivot_wider(names_from = "lab", values_from = "measurement")
labs_data_wide
```

If you want to convert from a wide format dataset into a longer-format dataset, you can instead use the `pivot_longer()` function. 


```{r}
# use pivot_longer() to convert labs_data_wide back to along format
# arguments are `cols` (use a select helper!), `names_to` and `values_to`
labs_data_wide |> 
  pivot_longer(cols = starts_with("ur_"), 
               names_to = "lab",
               values_to = "measurement")
```


Use-case for long-format: creating a visualization that compares the different variables using ggplot2.

```{r}
# create boxplots using the long format for the measurements from each lab
# maybe add a log-scale to the y-axis
labs_data |> ggplot() + 
  geom_boxplot(aes(x = lab, y = measurement)) +
  scale_y_log10()
```


### Exercise

Load the demographics data and use `select()` to select just the `respondent_id`, `gender`, `marital_status` and `race` columns and then use `pivot_longer()` to create the following long-format table (below are just the first 10 rows).

   respondent_id name           value    
           <dbl> <chr>          <chr>    
 1         73557 gender         male     
 2         73557 marital_status separated
 3         73557 race           black    
 4         73558 gender         male     
 5         73558 marital_status married  
 6         73558 race           white    
 7         73559 gender         male     
 8         73559 marital_status married  
 9         73559 race           white    
10         73560 gender         male     

#### Solution

```{r}
demographics <- read_csv("data/demographics.csv")
demographics
```

```{r}
demographics |> 
  select(respondent_id, gender, marital_status, race) |>
  pivot_longer(cols = all_of(c("gender", "marital_status", "race"))) 
```



